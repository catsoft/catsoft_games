@using App.cms.Helpers
@using App.cms.Models
@using App.cms.Options
@using App.cms.StaticHelpers
@using App.cms.StaticHelpers.Cookies
@using App.Models
@model App.ViewModels.Common.HeaderViewModel
@removeTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = null;
    var virtualityMenus = new List<Menu>
    {
        Menu.Home,
        Menu.Booking
        // Menu.Book,
        // Menu.Services,
        // Menu.Contacts,
        // Menu.Gallery,
    };

    var languages = LanguageHelper.GetLanguages();
    var currentLanguage = CookieHelper.GetLanguage(Context);
}

<header class="container-fluid d-flex flex-wrap py-3 border-bottom">

    <div class="row col flex-row justify-content-between align-items-center align-self-stretch">

        <div class="col-12 col-md-3 ms-md-3 d-flex justify-content-center justify-content-md-start">
            @{
#if DEBUG
                <a href="/logincms" class="d-flex align-items-center mb-3 me-5 mb-md-0 link-body-emphasis text-decoration-none">
                    <span class="fs-4">@await Html.RenderText("Login")</span>
                </a>
#endif

#if DEBUG
                <a href="/accounting/transactionlist" class="d-flex align-items-center mb-3 me-5 mb-md-0 link-body-emphasis text-decoration-none">
                    <span class="fs-4">@await Html.RenderText("Accounting")</span>
                </a>
#endif
            }

            <a href="/" class="d-flex align-items-center mb-3 mb-md-0 link-body-emphasis text-decoration-none">
                <span class="fs-4 fw-bolder">@(Model.CompanyName)</span>
            </a>
        </div>


        <ul class="col-12 col-md-5 ps-2 mt-2 mt-md-0 nav nav-pills d-flex justify-content-center justify-content-md-center">
            @if (Model.CurrentPage == Menu.Blog)
            {
                <li class="nav-item">
                    <a class="nav-link active" href="/Blog/Index">
                        <span>@await Html.RenderText("Blog")</span>
                    </a>
                </li>
            }
            else
            {
                @foreach (var menu in Model.Menus.Where(w => virtualityMenus.Contains(w.Menu)))
                {
                    <li class="nav-item">
                        @if(menu.Menu == Menu.Booking && !Options.IsBookingEnabled) continue;
                        
                        <a class="nav-link me-3 @(menu.Menu == Model.CurrentPage ? "active" : "")" href="@menu.Href">
                            <span>@await Html.RenderText(menu.Title)</span>
                        </a>
                    </li>
                }
            }
        </ul>

        <script>
        function getFlagEmoji(countryCode) {
            const codePoints = countryCode
                .toUpperCase()
                .split('')
                .map(char => 127397 + char.charCodeAt());
            return String.fromCodePoint(...codePoints);
        }
    </script>

        <div class="col-12 col-md-auto me-md-5 mt-2 mt-md-0">
            @* <div style="font-family: 'Noto Color Emoji'"> *@
            @*     <blockquote> *@
            @*         🇦🇫 🇦🇱 🇩🇿 🇦🇩 🇦🇴 🇦🇬 🇦🇷 🇦🇲 🇦🇺 🇦🇹 🇦🇿 🇧🇸 🇧🇭 🇧🇩 🇧🇧 🇧🇾 🇧🇪 🇧🇿 🇧🇯 🇧🇹 🇧🇴 🇧🇦 🇧🇼 🇧🇷 🇧🇳 🇧🇬 🇧🇫 🇧🇮 🇨🇻 🇰🇭 🇨🇲 🇨🇦 🇨🇫 🇹🇩 🇨🇱 🇨🇴 🇰🇲 🇨🇩 🇨🇷 🇨🇮 🇭🇷 🇨🇺 🇨🇾 🇨🇿 🇰🇵 🇨🇬 🇩🇰 🇩🇯 🇩🇲 🇩🇴 🇪🇨 🇪🇬 🇸🇻 🇬🇶 🇪🇷 🇪🇪 🇸🇿 🇪🇹 🇫🇯 🇫🇮 🇫🇷 🇬🇦 🇬🇲 🇬🇪 🇩🇪 🇬🇭 🇬🇷 🇬🇩 🇬🇹 🇬🇳 🇬🇼 🇬🇾 🇭🇹 🇭🇳 🇭🇺 🇮🇸 🇮🇳 🇮🇩 🇮🇷 🇮🇶 🇮🇪 🇮🇱 🇮🇹 🇯🇲 🇯🇵 🇯🇴 🇰🇿 🇰🇪 🇰🇮 🇰🇼 🇰🇬 🇱🇦 🇱🇻 🇱🇧 🇱🇸 🇱🇷 🇱🇾 🇱🇮 🇱🇹 🇱🇺 🇲🇬 🇲🇼 🇲🇾 🇲🇻 🇲🇱 🇲🇹 🇲🇭 🇲🇷 🇲🇺 🇲🇽 🇫🇲 🇲🇨 🇲🇳 🇲🇪 🇲🇦 🇲🇿 🇲🇲 🇳🇦 🇳🇷 🇳🇵 🇳🇱 🇳🇿 🇳🇮 🇳🇪 🇳🇬 🇲🇰 🇳🇴 🇴🇲 🇵🇰 🇵🇼 🇵🇦 🇵🇬 🇵🇾 🇵🇪 🇵🇭 🇵🇱 🇵🇹 🇶🇦 🇰🇷 🇲🇩 🇷🇴 🇷🇺 🇷🇼 🇰🇳 🇱🇨 🇻🇨 🇼🇸 🇸🇲 🇸🇹 🇸🇦 🇸🇳 🇷🇸 🇸🇨 🇸🇱 🇸🇬 🇸🇰 🇸🇮 🇸🇧 🇸🇴 🇿🇦 🇸🇸 🇪🇸 🇱🇰 🇸🇩 🇸🇷 🇸🇪 🇨🇭 🇸🇾 🇹🇯 🇹🇭 🇹🇱 🇹🇬 🇹🇴 🇹🇹 🇹🇳 🇹🇷 🇹🇲 🇹🇻 🇺🇬 🇺🇦 🇦🇪 🇬🇧 🇹🇿 🇺🇸 🇺🇾 🇺🇿 🇻🇺 🇻🇪 🇻🇳 🇾🇪 🇿🇲 🇿🇼 *@
            @*     </blockquote> *@
            @* </div> *@
            <select style="font-family: 'Noto Color Emoji'; width:auto" class="align-self-end form-select .form-select-lg" aria-label=".form-select-lg" data-style="btn btn-primary" onchange="changeLanguage()">
                @foreach (var language in languages)
                {
                    var languageText = language.ToString();
                    var flag = language.GetLanguageCode();
                    var emoji = flag.IsoCountryCodeToFlagEmoji();
                    var languageName = language.GetLanguageName();
                    <option style="font-family: 'Noto Color Emoji'" value="@languageText" @(currentLanguage == language ? "selected" : "") label="@(emoji + " " + languageName)">@emoji @languageName</option>
                }
            </select>

            <script>
            function changeLanguage() {
                var language = document.querySelector("select").value;

                var url = new URL(window.location.href);

                if (url.searchParams.has('language')) {
                    url.searchParams.set('language', language);
                } else {
                    url.searchParams.append('language', language);
                }
                window.location.href = url.toString();
            }
        </script>
        </div>
    </div>

</header>