@using App.cms.Models
@using App.cms.Repositories.TextResource
@using App.cms.StaticHelpers.Cookies
@model App.ViewModels.Common.HeaderViewModel
@inject ILanguageCookieRepository LanguageCookieRepository
@inject TextResourceRepository textResourceRepository
@inject ILocalOptionsCookieRepository LocalOptionsCookieRepository
@inject IBookingHistoryCookieRepository BookingHistoryCookieRepository
@removeTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = null;

    var languages = LanguageHelper.GetLanguages();
    var currentLanguage = LanguageCookieRepository.GetValue().Language;
}

<script>
        function getFlagEmoji(countryCode) {
            const codePoints = countryCode
                .toUpperCase()
                .split('')
                .map(char => 127397 + char.charCodeAt());
            return String.fromCodePoint(...codePoints);
        }
    </script>

<div class="mt-3 mt-lg-0" id="header_language_selector">
    @* <div style="font-family: 'Noto Color Emoji'"> *@
    @*     <blockquote> *@
    @*         🇦🇫 🇦🇱 🇩🇿 🇦🇩 🇦🇴 🇦🇬 🇦🇷 🇦🇲 🇦🇺 🇦🇹 🇦🇿 🇧🇸 🇧🇭 🇧🇩 🇧🇧 🇧🇾 🇧🇪 🇧🇿 🇧🇯 🇧🇹 🇧🇴 🇧🇦 🇧🇼 🇧🇷 🇧🇳 🇧🇬 🇧🇫 🇧🇮 🇨🇻 🇰🇭 🇨🇲 🇨🇦 🇨🇫 🇹🇩 🇨🇱 🇨🇴 🇰🇲 🇨🇩 🇨🇷 🇨🇮 🇭🇷 🇨🇺 🇨🇾 🇨🇿 🇰🇵 🇨🇬 🇩🇰 🇩🇯 🇩🇲 🇩🇴 🇪🇨 🇪🇬 🇸🇻 🇬🇶 🇪🇷 🇪🇪 🇸🇿 🇪🇹 🇫🇯 🇫🇮 🇫🇷 🇬🇦 🇬🇲 🇬🇪 🇩🇪 🇬🇭 🇬🇷 🇬🇩 🇬🇹 🇬🇳 🇬🇼 🇬🇾 🇭🇹 🇭🇳 🇭🇺 🇮🇸 🇮🇳 🇮🇩 🇮🇷 🇮🇶 🇮🇪 🇮🇱 🇮🇹 🇯🇲 🇯🇵 🇯🇴 🇰🇿 🇰🇪 🇰🇮 🇰🇼 🇰🇬 🇱🇦 🇱🇻 🇱🇧 🇱🇸 🇱🇷 🇱🇾 🇱🇮 🇱🇹 🇱🇺 🇲🇬 🇲🇼 🇲🇾 🇲🇻 🇲🇱 🇲🇹 🇲🇭 🇲🇷 🇲🇺 🇲🇽 🇫🇲 🇲🇨 🇲🇳 🇲🇪 🇲🇦 🇲🇿 🇲🇲 🇳🇦 🇳🇷 🇳🇵 🇳🇱 🇳🇿 🇳🇮 🇳🇪 🇳🇬 🇲🇰 🇳🇴 🇴🇲 🇵🇰 🇵🇼 🇵🇦 🇵🇬 🇵🇾 🇵🇪 🇵🇭 🇵🇱 🇵🇹 🇶🇦 🇰🇷 🇲🇩 🇷🇴 🇷🇺 🇷🇼 🇰🇳 🇱🇨 🇻🇨 🇼🇸 🇸🇲 🇸🇹 🇸🇦 🇸🇳 🇷🇸 🇸🇨 🇸🇱 🇸🇬 🇸🇰 🇸🇮 🇸🇧 🇸🇴 🇿🇦 🇸🇸 🇪🇸 🇱🇰 🇸🇩 🇸🇷 🇸🇪 🇨🇭 🇸🇾 🇹🇯 🇹🇭 🇹🇱 🇹🇬 🇹🇴 🇹🇹 🇹🇳 🇹🇷 🇹🇲 🇹🇻 🇺🇬 🇺🇦 🇦🇪 🇬🇧 🇹🇿 🇺🇸 🇺🇾 🇺🇿 🇻🇺 🇻🇪 🇻🇳 🇾🇪 🇿🇲 🇿🇼 *@
    @*     </blockquote> *@
    @* </div> *@
    <select style="font-family: 'Noto Color Emoji'; width:auto;"
            class="align-self-end form-select bg-transparent form-select-dark"
            aria-label=".form-select-lg form-select-item"
            onchange="setLanguage(this)">
        @foreach (var language in languages)
        {
            var languageText = language.ToString();
            var flag = language.GetLanguageCode();
            var emoji = flag.IsoCountryCodeToFlagEmoji();
            var languageName = language.GetLanguageName();
            <option style="font-family: 'Noto Color Emoji'"
                    class="form-select-item"
                    value="@languageText" @(currentLanguage == language ? "selected" : "")
                    label="@(emoji + " " + languageName.ToUpper())">
                @emoji @languageName.ToUpper()
            </option>
        }
    </select>
</div>