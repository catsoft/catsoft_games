@using App.cms.Repositories.TextResource
@model App.cms.ViewModels.PaginationViewModel    
@inject TextResourceRepository TextResourceRepository

@{
    var pageText = await TextResourceRepository.GetByTag(Context, "Page") + "= ";

    var rangeSize = 10;
}

<div class="pagination">
    <a href="@(Model.Url + pageText + (Model.CurrentPage - (Model.CurrentPage - 1 >= 0 ? 1 : 0)))" class="left me-3">
        <img src="/images/left_arrow.svg" style="width: 15px">
    </a>

    @for (var i = Model.CurrentPage - rangeSize; i < Model.CurrentPage + rangeSize; i++)
    {
        if (i >= 0 && i < Model.MaxPage)
        {
            
            <a class="me-3 @(i == Model.CurrentPage ? "active text-danger" : "")" href="@(Model.Url + pageText + i)">@(i+1)</a>
        }
    }

    <a href="@(Model.Url + pageText + (Model.CurrentPage + (Model.CurrentPage + 1 < Model.MaxPage ? 1 : 0)))" class="right">
        <img src="/images/right_arrow.svg" style="width: 15px">
    </a>
</div>