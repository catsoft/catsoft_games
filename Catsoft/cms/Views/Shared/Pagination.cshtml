@using App.cms.Repositories.TextResource
@model App.cms.ViewModels.PaginationViewModel    
@inject TextResourceRepository TextResourceRepository

@{
    var pageText = TextResourceRepository.GetByTag("Page") + "= "; 
}

@if (Model.MaxPage <= 1)
{
    return;
}

<div class="pagination">
    <a href="@(Model.Url + pageText +  (Model.CurrentPage - (Model.CurrentPage - 1 >= 0 ? 1 : 0)))" class="left"><img src="/images/left_arrow_pagin.png"></a>

    @if (Model.CurrentPage - 2 >= 0)
    {
        <a href="@(Model.Url + pageText +  (Model.CurrentPage - 2))">@(Model.CurrentPage - 1)</a>
    }
    
    @if (Model.CurrentPage - 1 >= 0)
    {
        <a href="@(Model.Url + pageText +  (Model.CurrentPage - 1))">@(Model.CurrentPage)</a>
    }
    <a href="@(Model.Url + pageText +  (Model.CurrentPage))" class="active">@(Model.CurrentPage + 1)</a>

    @if (Model.CurrentPage + 1 < Model.MaxPage)
    {
        <a href="@(Model.Url + pageText +  (Model.CurrentPage + 1))">@(Model.CurrentPage + 2)</a>
    }
    
    @if (Model.CurrentPage + 2 < Model.MaxPage)
    {
        <a href="@(Model.Url + pageText +  (Model.CurrentPage + 2))">@(Model.CurrentPage + 3)</a>
    }
    
    <a href="@(Model.Url + pageText +  (Model.CurrentPage + (Model.CurrentPage + 1 < Model.MaxPage ? 1 : 0)))" class="right"><img src="/images/right_arrow_pagin.png"></a>
</div>
